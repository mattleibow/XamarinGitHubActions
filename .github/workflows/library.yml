name: Build Library

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - 'Library/**'
      - '.github/workflows/library*'

defaults:
  run:
    shell: pwsh

jobs:

  # Library
  build_library:
    name: Build Library
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Xamarin
        uses: maxim-lobanov/setup-xamarin@v1.1
        with:
          xamarin-ios-version: latest
          xamarin-mac-version: latest
          xamarin-android-version: latest
          xcode-version: latest
      - name: Build NuGet
        run: msbuild ./Library/Library.sln /r /p:Configuration=Release

  # NuGet
  build_nuget:
    name: Build NuGet Package
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0
      - name: Build NuGet
        run: msbuild ./Library/Library.sln /r /p:Configuration=Release /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg /p:PackageOutputPath="${{ github.workspace }}/output" /t:Pack
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: NuGet Package
          path: output
      - name: Add NuGet to PATH
        uses: nuget/setup-nuget@v1
      - name: Push to GitHub Packages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          nuget sources add -name "GitHub" `
            -Source "https://nuget.pkg.github.com/mattleibow/index.json" `
            -Username mattleibow `
            -Password ${{ secrets.GITHUB_TOKEN }}
          nuget push output\*.nupkg -Source "GitHub" -SkipDuplicate

  # Tests
  run_tests:
    name: Run Tests
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Xamarin
        uses: maxim-lobanov/setup-xamarin@v1.1
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          xamarin-ios-version: latest
          xamarin-mac-version: latest
          xamarin-android-version: latest
          xcode-version: latest
      - name: Run Tests
        run: dotnet test ./Library/Library.Tests/Library.Tests.csproj /r /p:Configuration=Release
